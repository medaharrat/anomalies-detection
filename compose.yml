version: '3'

services:
  # Kafka Service Running with Zookeeper
  kafka:
    image: spotify/kafka
    container_name: kafka
    hostname: kafka
    ports:
      - 9092:9092
    environment:
      ADVERTISED_HOST: kafka
      ADVERTISED_PORT: 9092
      AUTO_CREATE_TOPICS: "true"
    command: >
        bash -c
        "(sleep 15s &&
        /opt/kafka_2.11-0.10.1.0/bin/kafka-topics.sh
        --create
        --zookeeper
        localhost:2181 --replication-factor 1 --partitions 1 --topic SWAT &) && (supervisord -n)"
    healthcheck:
      test: ['CMD-SHELL', '/opt/kafka_2.11-0.10.1.0/bin/kafka-topics.sh --zookeeper localhost:2181 --list']
      interval: 20s
      timeout: 5s
      retries: 3
    networks:
      - swat-network
          
  # Jupyter Environment with PySpark
  pyspark:
    image: pyspark
    build: ./spark
    container_name: pyspark
    ports:
      - 8888:8888
    networks:
      - swat-network

  # Framework for data visualization
  grafana:
    image: grafana/grafana
    container_name: grafana
    ports:
      - 3000:3000
    volumes:
      - grafana:/var/lib/grafana
    depends_on: 
      - influxdb
    networks:
      - swat-network

  # Influx DB Server
  influxdb:
    image: bitnami/influxdb
    container_name: influxdb
    restart: always
    ports:
     - 8086:8086
    volumes:
      - influxdb:/var/lib/influxdb
    environment:
      - INFLUXDB_DB=swat
      - INFLUXDB_USER_BUCKET=swat
      - INFLUXDB_ADMIN_USER=admin
      - INFLUXDB_ADMIN_USER_PASSWORD=admin123
      - INFLUXDB_ADMIN_USER_TOKEN=iJHZR-dq4I5LIpFZCc5bTUHx-I7dyz29ZTO-B4W5DpU4mhPVDFg-aAb2jK4Vz1C6n0DDb6ddA-bJ3EZAanAOUw==
    networks:
      - swat-network

  # User Interface for Influx DB - RUNNING BUT PROBLME WITH PORT
  #chronograf:
  #  image: chronograf:latest
  #  hostname: chronograf
  #  container_name: chronograf
  #  ports:
  #    - 8888:8888
  #  volumes:
  #    - chronograf:/var/lib/chronograf
  #  networks:
  #    - swat-network

  # Python Environement running a KafkaProducer program
  producer:      
    image: producer
    container_name: producer
    build: ./kafka
    depends_on:
      kafka:
        condition: service_healthy
    networks:
      - swat-network

networks:
  swat-network:
    
volumes:
  grafana:
  influxdb: